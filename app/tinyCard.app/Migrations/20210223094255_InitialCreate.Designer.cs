// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tinyCard.Core.Data;

namespace tinyCard.app.Migrations
{
    [DbContext(typeof(CardDbContext))]
    [Migration("20210223094255_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("tinyCard.Core.Model.Card", b =>
                {
                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CardNumber");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("tinyCard.Core.Model.Limit", b =>
                {
                    b.Property<Guid>("LimitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("LimitDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TranType")
                        .HasColumnType("int");

                    b.Property<decimal>("TranTypeBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TranTypeLimit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LimitId");

                    b.HasIndex("CardNumber");

                    b.HasIndex("LimitId")
                        .IsUnique();

                    b.ToTable("Limit");
                });

            modelBuilder.Entity("tinyCard.Core.Model.Limit", b =>
                {
                    b.HasOne("tinyCard.Core.Model.Card", null)
                        .WithMany("CardLimits")
                        .HasForeignKey("CardNumber");
                });

            modelBuilder.Entity("tinyCard.Core.Model.Card", b =>
                {
                    b.Navigation("CardLimits");
                });
#pragma warning restore 612, 618
        }
    }
}
